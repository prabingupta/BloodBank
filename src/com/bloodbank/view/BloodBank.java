package com.bloodbank.view;


import javax.swing.JOptionPane;
import com.bloodbank.model.BloodModel;
import com.bloodbank.util.ValidationUtil;
import java.util.LinkedList;
import javax.swing.table.DefaultTableModel;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JTextField;
import java.awt.Color;
import com.bloodbank.controller.algorithms.SelectionSort;
import com.bloodbank.controller.algorithms.BinarySearch;






/**
 *
 * @author prabinkumargupta
 * LMU ID: 23048504
 */
public class BloodBank extends javax.swing.JFrame {
    private List<BloodModel> donorList;
    private java.awt.CardLayout cardLayout;
    private final ValidationUtil validationUtil;
    private final Color errorColor = new Color(255,51,0);
    private final Color yellowColor = new Color(239,192,32);
    private final SelectionSort selectionSort;

    
    

    
    
    /**
     * Creates new form BloodBank
     */
    public BloodBank() {
        initComponents();
        validationUtil = new ValidationUtil();
        initializeLayout(); // Setting card layout and adding on screen
        dataInitialize(); // Initializing data of donor and table 
        startProgress(); // showing loading screen and initialize progress
        selectionSort = new SelectionSort();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMainScreen = new javax.swing.JPanel();
        pnlMainBar = new javax.swing.JPanel();
        lblLogo = new javax.swing.JLabel();
        lblHeadingTitle1 = new javax.swing.JLabel();
        lblSubHeading1 = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();
        lblLogout = new javax.swing.JLabel();
        tabPanMain = new javax.swing.JTabbedPane();
        pnlHome = new javax.swing.JPanel();
        pnlMiddleHome = new javax.swing.JPanel();
        lblMiddle = new javax.swing.JLabel();
        lblSubMiddle = new javax.swing.JLabel();
        lblFooterTitle = new javax.swing.JLabel();
        lblFooterTitle1 = new javax.swing.JLabel();
        lblHandImg = new javax.swing.JLabel();
        lblWelcomeBloodBankTitle = new javax.swing.JLabel();
        pnlDonorList = new javax.swing.JPanel();
        spTblDonor = new javax.swing.JScrollPane();
        tblDonor = new javax.swing.JTable();
        lblInfoTable = new javax.swing.JLabel();
        pnlDonorData = new javax.swing.JPanel();
        lblDonorId = new javax.swing.JLabel();
        txtfldFullName = new javax.swing.JTextField();
        lblFullName = new javax.swing.JLabel();
        txtfldDonorId = new javax.swing.JTextField();
        lblAge = new javax.swing.JLabel();
        txtfldBloodGroup = new javax.swing.JTextField();
        txtfldAge = new javax.swing.JTextField();
        lblContact = new javax.swing.JLabel();
        lblBloodGroup = new javax.swing.JLabel();
        txtfldContact = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        txtfldAddress = new javax.swing.JTextField();
        lblAddress = new javax.swing.JLabel();
        txtfldEmail = new javax.swing.JTextField();
        lblGender = new javax.swing.JLabel();
        txtfldGender = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        lblDonorData = new javax.swing.JLabel();
        btnSortDonorId = new javax.swing.JButton();
        txtFldSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        pnlContactUs = new javax.swing.JPanel();
        pnlImgDonate = new javax.swing.JPanel();
        lblDonateImg = new javax.swing.JLabel();
        pnlContactDetails = new javax.swing.JPanel();
        pnlDetails = new javax.swing.JPanel();
        lblContactUs = new javax.swing.JLabel();
        lblLocation = new javax.swing.JLabel();
        lblAddressDetail = new javax.swing.JLabel();
        lblSendMessage = new javax.swing.JLabel();
        lblMessageDetail = new javax.swing.JLabel();
        lblCallUs = new javax.swing.JLabel();
        lblCallingDetails = new javax.swing.JLabel();
        lblIconSendMsg = new javax.swing.JLabel();
        lblIconAddress = new javax.swing.JLabel();
        lblCallIcon = new javax.swing.JLabel();
        lblPointingIcon = new javax.swing.JLabel();
        pnlLoginScreen = new javax.swing.JPanel();
        pnlLogin = new javax.swing.JPanel();
        pnlRightLogin = new javax.swing.JPanel();
        lblSingnInTitle = new javax.swing.JLabel();
        lblAdminLogo = new javax.swing.JLabel();
        lblSubHeadingTitleLogin = new javax.swing.JLabel();
        lblForgetPassword = new javax.swing.JLabel();
        btnLogin = new javax.swing.JButton();
        lblErrorLogin = new javax.swing.JLabel();
        txtfldUsername = new javax.swing.JTextField();
        pwfldPassword = new javax.swing.JPasswordField();
        lblheading = new javax.swing.JLabel();
        lblLogoBlood = new javax.swing.JLabel();
        pnlLoadingScreen = new javax.swing.JPanel();
        lblBloodLogo = new javax.swing.JLabel();
        lblHeadingTitle = new javax.swing.JLabel();
        lblSubHeading = new javax.swing.JLabel();
        lblThirdHeading = new javax.swing.JLabel();
        pgBarSplashScreen = new javax.swing.JProgressBar();
        lblLoading = new javax.swing.JLabel();

        pnlMainScreen.setPreferredSize(new java.awt.Dimension(900, 550));

        lblLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/bloodbank/resources/blood-bank.png"))); // NOI18N

        lblHeadingTitle1.setBackground(new java.awt.Color(255, 255, 255));
        lblHeadingTitle1.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        lblHeadingTitle1.setForeground(new java.awt.Color(204, 0, 51));
        lblHeadingTitle1.setText("Blood Bank Management System");

        lblSubHeading1.setBackground(new java.awt.Color(204, 0, 0));
        lblSubHeading1.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        lblSubHeading1.setForeground(new java.awt.Color(204, 0, 0));
        lblSubHeading1.setText("Donate Blood Save Life");

        btnLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/bloodbank/resources/logout-removebg-preview (1).png"))); // NOI18N
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        lblLogout.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblLogout.setForeground(new java.awt.Color(204, 0, 51));
        lblLogout.setText("LOGOUT");

        javax.swing.GroupLayout pnlMainBarLayout = new javax.swing.GroupLayout(pnlMainBar);
        pnlMainBar.setLayout(pnlMainBarLayout);
        pnlMainBarLayout.setHorizontalGroup(
            pnlMainBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainBarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblLogo)
                .addGap(35, 35, 35)
                .addGroup(pnlMainBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHeadingTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSubHeading1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblLogout)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLogout)
                .addGap(39, 39, 39))
        );
        pnlMainBarLayout.setVerticalGroup(
            pnlMainBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainBarLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(pnlMainBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblLogo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainBarLayout.createSequentialGroup()
                        .addGroup(pnlMainBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlMainBarLayout.createSequentialGroup()
                                .addComponent(lblHeadingTitle1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblSubHeading1))
                            .addGroup(pnlMainBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnLogout)))
                        .addGap(10, 10, 10))))
        );

        tabPanMain.setBackground(new java.awt.Color(255, 255, 255));
        tabPanMain.setForeground(new java.awt.Color(204, 0, 0));
        tabPanMain.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N

        pnlMiddleHome.setBackground(new java.awt.Color(204, 0, 51));

        lblMiddle.setFont(new java.awt.Font("Serif", 0, 28)); // NOI18N
        lblMiddle.setForeground(new java.awt.Color(255, 255, 255));
        lblMiddle.setText("The blood you donate gives someone");

        lblSubMiddle.setFont(new java.awt.Font("Serif", 0, 28)); // NOI18N
        lblSubMiddle.setForeground(new java.awt.Color(255, 255, 255));
        lblSubMiddle.setText("another chance at life.");

        lblFooterTitle.setFont(new java.awt.Font("Serif", 1, 30)); // NOI18N
        lblFooterTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblFooterTitle.setText("GIVE THE GIFT OF LIFE");

        lblFooterTitle1.setFont(new java.awt.Font("Serif", 1, 36)); // NOI18N
        lblFooterTitle1.setForeground(new java.awt.Color(255, 255, 255));
        lblFooterTitle1.setText("DONATE BLOOD");

        lblHandImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/bloodbank/resources/bloodIcon_Hand.png"))); // NOI18N

        javax.swing.GroupLayout pnlMiddleHomeLayout = new javax.swing.GroupLayout(pnlMiddleHome);
        pnlMiddleHome.setLayout(pnlMiddleHomeLayout);
        pnlMiddleHomeLayout.setHorizontalGroup(
            pnlMiddleHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMiddleHomeLayout.createSequentialGroup()
                .addGroup(pnlMiddleHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMiddleHomeLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblSubMiddle, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(178, 178, 178))
                    .addGroup(pnlMiddleHomeLayout.createSequentialGroup()
                        .addGroup(pnlMiddleHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlMiddleHomeLayout.createSequentialGroup()
                                .addGap(58, 58, 58)
                                .addGroup(pnlMiddleHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblFooterTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblMiddle, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pnlMiddleHomeLayout.createSequentialGroup()
                                .addGap(85, 85, 85)
                                .addComponent(lblFooterTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)))
                .addComponent(lblHandImg, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlMiddleHomeLayout.setVerticalGroup(
            pnlMiddleHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMiddleHomeLayout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addComponent(lblMiddle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSubMiddle, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addComponent(lblFooterTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblFooterTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(lblHandImg, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE)
        );

        lblWelcomeBloodBankTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 22)); // NOI18N
        lblWelcomeBloodBankTitle.setText("Welcome To Blood Bank & Donor Management System");

        javax.swing.GroupLayout pnlHomeLayout = new javax.swing.GroupLayout(pnlHome);
        pnlHome.setLayout(pnlHomeLayout);
        pnlHomeLayout.setHorizontalGroup(
            pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMiddleHome, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlHomeLayout.createSequentialGroup()
                .addGap(149, 149, 149)
                .addComponent(lblWelcomeBloodBankTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 596, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlHomeLayout.setVerticalGroup(
            pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHomeLayout.createSequentialGroup()
                .addComponent(pnlMiddleHome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblWelcomeBloodBankTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 62, Short.MAX_VALUE))
        );

        tabPanMain.addTab("Home", pnlHome);

        pnlDonorList.setBackground(new java.awt.Color(255, 255, 255));
        pnlDonorList.setPreferredSize(new java.awt.Dimension(900, 600));

        tblDonor.setBackground(new java.awt.Color(204, 0, 51));
        tblDonor.setForeground(new java.awt.Color(255, 255, 255));
        tblDonor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Donor Id", "Full Name", "Age", "Contact", "Blood Group", "Address", "Email", "Gender"
            }
        ));
        spTblDonor.setViewportView(tblDonor);

        lblInfoTable.setBackground(new java.awt.Color(204, 0, 51));
        lblInfoTable.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblInfoTable.setForeground(new java.awt.Color(204, 0, 51));
        lblInfoTable.setText("Donor Information Table");

        pnlDonorData.setBackground(new java.awt.Color(0, 0, 0));
        pnlDonorData.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        lblDonorId.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        lblDonorId.setForeground(new java.awt.Color(255, 255, 255));

        txtfldFullName.setBackground(new java.awt.Color(0, 0, 0));
        txtfldFullName.setForeground(new java.awt.Color(255, 255, 255));
        txtfldFullName.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 0), 2), "Full Name", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 15), new java.awt.Color(204, 0, 0))); // NOI18N

        lblFullName.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        lblFullName.setForeground(new java.awt.Color(255, 255, 255));

        txtfldDonorId.setBackground(new java.awt.Color(0, 0, 0));
        txtfldDonorId.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        txtfldDonorId.setForeground(new java.awt.Color(255, 255, 255));
        txtfldDonorId.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 0), 2), "Donor ID", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 15), new java.awt.Color(204, 0, 0))); // NOI18N

        lblAge.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        lblAge.setForeground(new java.awt.Color(255, 255, 255));

        txtfldBloodGroup.setBackground(new java.awt.Color(0, 0, 0));
        txtfldBloodGroup.setForeground(new java.awt.Color(255, 255, 255));
        txtfldBloodGroup.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 0), 2), "Blood Group", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 15), new java.awt.Color(204, 0, 0))); // NOI18N

        txtfldAge.setBackground(new java.awt.Color(0, 0, 0));
        txtfldAge.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        txtfldAge.setForeground(new java.awt.Color(255, 255, 255));
        txtfldAge.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 0), 2), "Age", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 15), new java.awt.Color(204, 0, 0))); // NOI18N

        lblContact.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        lblContact.setForeground(new java.awt.Color(255, 255, 255));

        lblBloodGroup.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        lblBloodGroup.setForeground(new java.awt.Color(255, 255, 255));

        txtfldContact.setBackground(new java.awt.Color(0, 0, 0));
        txtfldContact.setForeground(new java.awt.Color(255, 255, 255));
        txtfldContact.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 0), 2), "Contact", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 15), new java.awt.Color(204, 0, 0))); // NOI18N

        lblEmail.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        lblEmail.setForeground(new java.awt.Color(255, 255, 255));

        txtfldAddress.setBackground(new java.awt.Color(0, 0, 0));
        txtfldAddress.setForeground(new java.awt.Color(255, 255, 255));
        txtfldAddress.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 0), 2), "Address", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 15), new java.awt.Color(204, 0, 0))); // NOI18N

        lblAddress.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        lblAddress.setForeground(new java.awt.Color(255, 255, 255));

        txtfldEmail.setBackground(new java.awt.Color(0, 0, 0));
        txtfldEmail.setForeground(new java.awt.Color(255, 255, 255));
        txtfldEmail.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 0), 2), "Email", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 15), new java.awt.Color(204, 0, 0))); // NOI18N

        lblGender.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        lblGender.setForeground(new java.awt.Color(255, 255, 255));

        txtfldGender.setBackground(new java.awt.Color(0, 0, 0));
        txtfldGender.setForeground(new java.awt.Color(255, 255, 255));
        txtfldGender.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 0), 2), "Gender", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 15), new java.awt.Color(204, 0, 0))); // NOI18N

        btnDelete.setBackground(new java.awt.Color(204, 0, 0));
        btnDelete.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("DELETE");
        btnDelete.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnAdd.setBackground(new java.awt.Color(204, 0, 0));
        btnAdd.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("ADD");
        btnAdd.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnClear.setBackground(new java.awt.Color(204, 0, 0));
        btnClear.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        btnClear.setForeground(new java.awt.Color(255, 255, 255));
        btnClear.setText("CLEAR");
        btnClear.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(204, 0, 0));
        btnUpdate.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("UPDATE");
        btnUpdate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlDonorDataLayout = new javax.swing.GroupLayout(pnlDonorData);
        pnlDonorData.setLayout(pnlDonorDataLayout);
        pnlDonorDataLayout.setHorizontalGroup(
            pnlDonorDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDonorDataLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(pnlDonorDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfldDonorId, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                    .addComponent(txtfldAddress)
                    .addComponent(lblDonorId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(27, 27, 27)
                .addGroup(pnlDonorDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtfldFullName, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlDonorDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(lblEmail, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtfldEmail, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE))
                    .addComponent(lblFullName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(27, 27, 27)
                .addGroup(pnlDonorDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlDonorDataLayout.createSequentialGroup()
                        .addComponent(txtfldAge, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(txtfldContact, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlDonorDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtfldBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(66, 66, 66))
                    .addGroup(pnlDonorDataLayout.createSequentialGroup()
                        .addGroup(pnlDonorDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtfldGender, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                            .addComponent(lblGender, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblAge, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pnlDonorDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlDonorDataLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                                .addGroup(pnlDonorDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(42, 42, 42)
                                .addGroup(pnlDonorDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(50, 50, 50))
                            .addGroup(pnlDonorDataLayout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(lblContact, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))))))
        );
        pnlDonorDataLayout.setVerticalGroup(
            pnlDonorDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDonorDataLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(pnlDonorDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfldDonorId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfldFullName, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfldAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfldContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfldBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(pnlDonorDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lblFullName, javax.swing.GroupLayout.DEFAULT_SIZE, 10, Short.MAX_VALUE)
                    .addComponent(lblDonorId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblAge, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblBloodGroup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblContact, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(34, 34, 34)
                .addGroup(pnlDonorDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDonorDataLayout.createSequentialGroup()
                        .addGroup(pnlDonorDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDonorDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtfldAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtfldEmail)
                        .addComponent(txtfldGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlDonorDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 11, Short.MAX_VALUE)
                    .addComponent(lblAddress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblGender, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDonorDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45))
        );

        lblDonorData.setBackground(new java.awt.Color(204, 0, 51));
        lblDonorData.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblDonorData.setForeground(new java.awt.Color(204, 0, 51));
        lblDonorData.setText("Donor Data");

        btnSortDonorId.setFont(new java.awt.Font("Helvetica Neue", 1, 16)); // NOI18N
        btnSortDonorId.setForeground(new java.awt.Color(204, 51, 0));
        btnSortDonorId.setText("Sort Donor ID");
        btnSortDonorId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortDonorIdActionPerformed(evt);
            }
        });

        btnSearch.setFont(new java.awt.Font("Helvetica Neue", 1, 16)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(204, 0, 0));
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlDonorListLayout = new javax.swing.GroupLayout(pnlDonorList);
        pnlDonorList.setLayout(pnlDonorListLayout);
        pnlDonorListLayout.setHorizontalGroup(
            pnlDonorListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDonorListLayout.createSequentialGroup()
                .addComponent(spTblDonor, javax.swing.GroupLayout.DEFAULT_SIZE, 894, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(pnlDonorData, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlDonorListLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDonorListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDonorListLayout.createSequentialGroup()
                        .addComponent(lblDonorData, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlDonorListLayout.createSequentialGroup()
                        .addComponent(lblInfoTable, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(btnSortDonorId)
                        .addGap(36, 36, 36))))
        );
        pnlDonorListLayout.setVerticalGroup(
            pnlDonorListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDonorListLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDonorListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblInfoTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(pnlDonorListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSortDonorId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtFldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spTblDonor, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDonorData)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlDonorData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabPanMain.addTab("Donor List", pnlDonorList);

        pnlImgDonate.setBackground(new java.awt.Color(204, 0, 51));

        lblDonateImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/bloodbank/resources/bloodnonate-removebg.png"))); // NOI18N

        javax.swing.GroupLayout pnlImgDonateLayout = new javax.swing.GroupLayout(pnlImgDonate);
        pnlImgDonate.setLayout(pnlImgDonateLayout);
        pnlImgDonateLayout.setHorizontalGroup(
            pnlImgDonateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlImgDonateLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblDonateImg)
                .addGap(206, 206, 206))
        );
        pnlImgDonateLayout.setVerticalGroup(
            pnlImgDonateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblDonateImg, javax.swing.GroupLayout.PREFERRED_SIZE, 223, Short.MAX_VALUE)
        );

        pnlContactDetails.setBackground(new java.awt.Color(0, 0, 0));

        pnlDetails.setBackground(new java.awt.Color(204, 0, 51));
        pnlDetails.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));

        lblContactUs.setFont(new java.awt.Font("Serif", 1, 22)); // NOI18N
        lblContactUs.setForeground(new java.awt.Color(255, 255, 255));
        lblContactUs.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblContactUs.setText("CONTACT US");

        lblLocation.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        lblLocation.setForeground(new java.awt.Color(255, 255, 255));
        lblLocation.setText("Address:");

        lblAddressDetail.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        lblAddressDetail.setForeground(new java.awt.Color(255, 255, 255));
        lblAddressDetail.setText("29, Anamnagar,st.Kathmandu Nepal");

        lblSendMessage.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        lblSendMessage.setForeground(new java.awt.Color(255, 255, 255));
        lblSendMessage.setText("Send Message:");

        lblMessageDetail.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        lblMessageDetail.setForeground(new java.awt.Color(255, 255, 255));
        lblMessageDetail.setText("donatebloodnepal091@gmail.com");

        lblCallUs.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        lblCallUs.setForeground(new java.awt.Color(255, 255, 255));
        lblCallUs.setText("Call Us:");

        lblCallingDetails.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        lblCallingDetails.setForeground(new java.awt.Color(255, 255, 255));
        lblCallingDetails.setText("+977-9812032423");

        lblIconSendMsg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/bloodbank/resources/new-email.png"))); // NOI18N

        lblIconAddress.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/bloodbank/resources/location-pin.png"))); // NOI18N

        lblCallIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/bloodbank/resources/contact-information.png"))); // NOI18N

        javax.swing.GroupLayout pnlDetailsLayout = new javax.swing.GroupLayout(pnlDetails);
        pnlDetails.setLayout(pnlDetailsLayout);
        pnlDetailsLayout.setHorizontalGroup(
            pnlDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDetailsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlDetailsLayout.createSequentialGroup()
                        .addComponent(lblIconSendMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblSendMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblMessageDetail)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDetailsLayout.createSequentialGroup()
                        .addComponent(lblCallIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCallUs, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCallingDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(247, 247, 247))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDetailsLayout.createSequentialGroup()
                        .addComponent(lblIconAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDetailsLayout.createSequentialGroup()
                                .addComponent(lblContactUs, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(194, 194, 194))
                            .addGroup(pnlDetailsLayout.createSequentialGroup()
                                .addComponent(lblLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblAddressDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        pnlDetailsLayout.setVerticalGroup(
            pnlDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDetailsLayout.createSequentialGroup()
                .addGroup(pnlDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlDetailsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblContactUs, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlDetailsLayout.createSequentialGroup()
                        .addGroup(pnlDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlDetailsLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(pnlDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblLocation)
                                    .addComponent(lblAddressDetail)))
                            .addGroup(pnlDetailsLayout.createSequentialGroup()
                                .addContainerGap(12, Short.MAX_VALUE)
                                .addComponent(lblIconAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblIconSendMsg, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblSendMessage)
                                .addComponent(lblMessageDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(9, 9, 9)
                .addGroup(pnlDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblCallUs)
                        .addComponent(lblCallingDetails))
                    .addComponent(lblCallIcon))
                .addContainerGap())
        );

        lblPointingIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/bloodbank/resources/pointingdetails-removebg.png"))); // NOI18N
        lblPointingIcon.setText("jLabel1");

        javax.swing.GroupLayout pnlContactDetailsLayout = new javax.swing.GroupLayout(pnlContactDetails);
        pnlContactDetails.setLayout(pnlContactDetailsLayout);
        pnlContactDetailsLayout.setHorizontalGroup(
            pnlContactDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlContactDetailsLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(lblPointingIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addComponent(pnlDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );
        pnlContactDetailsLayout.setVerticalGroup(
            pnlContactDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlContactDetailsLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(pnlContactDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPointingIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout pnlContactUsLayout = new javax.swing.GroupLayout(pnlContactUs);
        pnlContactUs.setLayout(pnlContactUsLayout);
        pnlContactUsLayout.setHorizontalGroup(
            pnlContactUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlImgDonate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlContactDetails, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlContactUsLayout.setVerticalGroup(
            pnlContactUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlContactUsLayout.createSequentialGroup()
                .addComponent(pnlImgDonate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlContactDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabPanMain.addTab("Contact Us", pnlContactUs);

        javax.swing.GroupLayout pnlMainScreenLayout = new javax.swing.GroupLayout(pnlMainScreen);
        pnlMainScreen.setLayout(pnlMainScreenLayout);
        pnlMainScreenLayout.setHorizontalGroup(
            pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMainBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(tabPanMain)
        );
        pnlMainScreenLayout.setVerticalGroup(
            pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainScreenLayout.createSequentialGroup()
                .addComponent(pnlMainBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabPanMain, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE))
        );

        pnlLoginScreen.setPreferredSize(new java.awt.Dimension(900, 550));

        pnlLogin.setBackground(new java.awt.Color(204, 0, 51));

        pnlRightLogin.setBackground(new java.awt.Color(0, 0, 0));

        lblSingnInTitle.setFont(new java.awt.Font("SansSerif", 1, 20)); // NOI18N
        lblSingnInTitle.setForeground(new java.awt.Color(204, 0, 0));
        lblSingnInTitle.setText("Sign in to Blood Bank");

        lblAdminLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/bloodbank/resources/admin.png"))); // NOI18N
        lblAdminLogo.setText("jLabel1");

        lblSubHeadingTitleLogin.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        lblSubHeadingTitleLogin.setForeground(new java.awt.Color(204, 0, 0));
        lblSubHeadingTitleLogin.setText("Please enter your login details below");

        lblForgetPassword.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        lblForgetPassword.setForeground(new java.awt.Color(204, 0, 0));
        lblForgetPassword.setText("                                       Forgot your Password?");

        btnLogin.setBackground(new java.awt.Color(204, 0, 0));
        btnLogin.setFont(new java.awt.Font("Helvetica Neue", 1, 16)); // NOI18N
        btnLogin.setForeground(new java.awt.Color(255, 255, 255));
        btnLogin.setText("LOGIN");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        lblErrorLogin.setForeground(new java.awt.Color(204, 51, 0));
        lblErrorLogin.setText("                       ");

        txtfldUsername.setBackground(new java.awt.Color(0, 0, 0));
        txtfldUsername.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        txtfldUsername.setForeground(new java.awt.Color(204, 0, 0));
        txtfldUsername.setText("admin");
        txtfldUsername.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 0), 2), "Username", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 15), new java.awt.Color(204, 0, 0))); // NOI18N

        pwfldPassword.setBackground(new java.awt.Color(0, 0, 0));
        pwfldPassword.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        pwfldPassword.setForeground(new java.awt.Color(204, 51, 0));
        pwfldPassword.setText("admin");
        pwfldPassword.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 0), 2), "Password", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 15), new java.awt.Color(204, 0, 0))); // NOI18N
        pwfldPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwfldPasswordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlRightLoginLayout = new javax.swing.GroupLayout(pnlRightLogin);
        pnlRightLogin.setLayout(pnlRightLoginLayout);
        pnlRightLoginLayout.setHorizontalGroup(
            pnlRightLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblForgetPassword, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlRightLoginLayout.createSequentialGroup()
                .addGroup(pnlRightLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlRightLoginLayout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addGroup(pnlRightLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtfldUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSubHeadingTitleLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pwfldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSingnInTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlRightLoginLayout.createSequentialGroup()
                        .addGap(173, 173, 173)
                        .addComponent(lblAdminLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
            .addComponent(lblErrorLogin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlRightLoginLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );
        pnlRightLoginLayout.setVerticalGroup(
            pnlRightLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRightLoginLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(lblAdminLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSingnInTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSubHeadingTitleLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtfldUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pwfldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblErrorLogin)
                .addGap(18, 18, 18)
                .addComponent(lblForgetPassword)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblheading.setFont(new java.awt.Font("Helvetica Neue", 1, 30)); // NOI18N
        lblheading.setForeground(new java.awt.Color(255, 255, 255));
        lblheading.setText("      Blood Bank Management ");

        lblLogoBlood.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/bloodbank/resources/blooddonationiconpng (1).png"))); // NOI18N

        javax.swing.GroupLayout pnlLoginLayout = new javax.swing.GroupLayout(pnlLogin);
        pnlLogin.setLayout(pnlLoginLayout);
        pnlLoginLayout.setHorizontalGroup(
            pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLoginLayout.createSequentialGroup()
                .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlLoginLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblheading, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlLoginLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(lblLogoBlood, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(pnlRightLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlLoginLayout.setVerticalGroup(
            pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLoginLayout.createSequentialGroup()
                .addContainerGap(90, Short.MAX_VALUE)
                .addComponent(lblLogoBlood, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblheading)
                .addGap(184, 184, 184))
            .addComponent(pnlRightLogin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnlLoginScreenLayout = new javax.swing.GroupLayout(pnlLoginScreen);
        pnlLoginScreen.setLayout(pnlLoginScreenLayout);
        pnlLoginScreenLayout.setHorizontalGroup(
            pnlLoginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlLoginScreenLayout.setVerticalGroup(
            pnlLoginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlLoadingScreen.setBackground(new java.awt.Color(204, 0, 51));
        pnlLoadingScreen.setPreferredSize(new java.awt.Dimension(900, 550));

        lblBloodLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/bloodbank/resources/blooddonationiconpng (1).png"))); // NOI18N

        lblHeadingTitle.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 24)); // NOI18N
        lblHeadingTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblHeadingTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeadingTitle.setText("Welcome To Blood Bank Nepal");

        lblSubHeading.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 18)); // NOI18N
        lblSubHeading.setForeground(new java.awt.Color(255, 255, 255));
        lblSubHeading.setText("                                                                        Donate Blood Save Life");

        lblThirdHeading.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 22)); // NOI18N
        lblThirdHeading.setForeground(new java.awt.Color(255, 255, 255));
        lblThirdHeading.setText("Nepal's Number One Blood Bank");

        lblLoading.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 14)); // NOI18N
        lblLoading.setForeground(new java.awt.Color(255, 255, 255));
        lblLoading.setText(" Loading...");

        javax.swing.GroupLayout pnlLoadingScreenLayout = new javax.swing.GroupLayout(pnlLoadingScreen);
        pnlLoadingScreen.setLayout(pnlLoadingScreenLayout);
        pnlLoadingScreenLayout.setHorizontalGroup(
            pnlLoadingScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblSubHeading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblHeadingTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlLoadingScreenLayout.createSequentialGroup()
                .addGroup(pnlLoadingScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlLoadingScreenLayout.createSequentialGroup()
                        .addGap(246, 246, 246)
                        .addComponent(lblBloodLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlLoadingScreenLayout.createSequentialGroup()
                        .addGap(296, 296, 296)
                        .addComponent(lblThirdHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlLoadingScreenLayout.createSequentialGroup()
                        .addGap(287, 287, 287)
                        .addGroup(pnlLoadingScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pgBarSplashScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLoading, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(241, Short.MAX_VALUE))
        );
        pnlLoadingScreenLayout.setVerticalGroup(
            pnlLoadingScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoadingScreenLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(lblBloodLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblHeadingTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSubHeading)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblThirdHeading)
                .addGap(27, 27, 27)
                .addComponent(lblLoading)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pgBarSplashScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(107, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlLoadingScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlLoadingScreen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

     /**
     * Initializes the layout of the application by setting up the CardLayout
     * and adding panels for different screens. Each panel is uniquely
     * identified for easy navigation between screens.
     */
    private void initializeLayout() {
        cardLayout = new java.awt.CardLayout();
        getContentPane().setLayout(cardLayout);
        
        
         //Adding panels with unique identifiers 
        getContentPane().add(pnlLoadingScreen, "LoadingScreen");
        getContentPane().add(pnlLoginScreen, "LoginScreen");
        getContentPane().add(pnlMainScreen, "MainScreen");
                                          
         //Start with loading screen
        loadScreen("LoadingScreen");
        
    }
    
    /**
     * Initializes the application's data, including the donor list and table.
     * Populates the donor list with sample data for demonstration purposes.
     */
   private void dataInitialize() {
       donorList = new LinkedList<>();
       
       // Registering the sample of donors
       registerDonor(new BloodModel(2038,"Ram Chaudhary", (short) 25, "9822445455", "A+", "Butwal", "ram123@gmail.com", "Male"));
       registerDonor(new BloodModel(2040,"Sujata Bhusal", (short) 22, "9823567832", "B+", "Chitwan", "sujata246@gmail.com", "Female"));
       registerDonor(new BloodModel(2031,"Sudip Tamang", (short) 28, "9812783213", "A-", "Dharan", "sudip321@gmail.com", "Male"));
       registerDonor(new BloodModel(2036,"Nabin Koirala", (short) 26, "9823445455", "AB+", "Nepalgunj", "nabin221@gmail.com", "Male"));  
       registerDonor(new BloodModel(2037,"Bipin Rajbanshi",(short)32,"9812093475","O+","Janakpur","rajbanshibipin212@gmail.com","Male"));
       registerDonor(new BloodModel(2039,"Rahul Yadav",(short)32,"9812343486","O-","Saptari","ydvrahul22@gmail.com","Male"));
       
        
   }
    
    
    /**
     * Simulates the loading progress using a SwingWorker thread. Updates a
     * progress bar incrementally and switches to the login screen upon
     * completion.
     */
    private void startProgress(){
        javax.swing.SwingWorker<Void, Integer> worker  = new javax.swing.SwingWorker<>(){
            @Override 
            protected Void doInBackground() throws Exception {
                for (int i = 0; i <= 100; i++){
                    Thread.sleep(30); // Delay for progress bar
                    publish(i); // Publish progress
                    
                } 
                return null;
            }
            @Override
            protected void process(java.util.List<Integer> chunks) {
                int progress = chunks.get(chunks.size() -1);
                pgBarSplashScreen.setValue(progress);
            }

            @Override
            protected void done() {
                loadScreen("LoginScreen"); // Switch to login screen
            }
           };
          worker.execute();
        
    }
    
    // Method to add student and populate the data
    private void registerDonor(BloodModel  donor){
        donorList.add(donor);
        DefaultTableModel tblModel = (DefaultTableModel) tblDonor.getModel();
        tblModel.addRow(new Object[]{
               donor.getDonorId(), donor.getFullName(), donor.getAge(), donor.getContact(), donor.getBloodGroup(), donor.getAddress(), 
               donor.getEmail(), donor.getGender()
        });
    }
    
    
    
    
    
    
    /**
     * Populates the JTable with the current list of donor records. Clears
     * existing rows in the table model before adding new data.
     */
    private void loadListToTable(List<BloodModel> donorList) {
        DefaultTableModel tblModel = (DefaultTableModel) tblDonor.getModel();
        
        // clear all row if required
        tblModel.setRowCount(0);
        
        // Populate the table with donor data
        donorList.forEach(donor -> tblModel.addRow(new Object[]{
             donor.getDonorId(), donor.getFullName(), 
            donor.getAge(), donor.getContact(), 
            donor.getBloodGroup(), donor.getAddress(),
            donor.getEmail(), donor.getGender()
    }));
    }
    
    
    /**
     * Validates a single input field based on specific criteria and updates its
     * visual state.
     *
     * @param textField the JTextField to validate
     * @param fieldName the name of the field for error display
     * @param errorLbl the JLabel to show error messages
     * @param errorMsg the error message to display for invalid input
     * @param errorColor the color for error borders and text
     * @param successColor the color for successful validation borders
     * @param isValidFormat whether the input satisfies the field-specific
     * validation criteria
     * @return true if the field passes validation, false otherwise
     */
    
   private boolean validateField(JTextField textField, String fieldName, JLabel errorLbl, String errorMsg, Color errorColor, Color successColor, boolean isValidFormat) {
        if (ValidationUtil.isNullOrEmpty(textField.getText())) {
            textField.setBorder(createTitledBorder(errorColor, fieldName));
            errorLbl.setText("Field cannot be empty!");
            errorLbl.setVisible(true);
            return false;
        } else if (!isValidFormat) {
            textField.setBorder(createTitledBorder(errorColor, fieldName));
            errorLbl.setText(errorMsg);
            errorLbl.setVisible(true);
            return false;
        } else {
            textField.setBorder(createTitledBorder(successColor, fieldName));
            errorLbl.setVisible(false);
            return true;
        }
    }
   
    /**
     * Creates a custom TitledBorder with specified color and title.
     *
     * @param color the color for the border and title
     * @param title the title text for the border
     * @return a TitledBorder instance
     */
    private javax.swing.border.TitledBorder createTitledBorder(Color color, String title) {
        return javax.swing.BorderFactory.createTitledBorder(
                javax.swing.BorderFactory.createLineBorder(color, 2),
                title,
                javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION,
                javax.swing.border.TitledBorder.DEFAULT_POSITION,
                new java.awt.Font("Segoe UI", 1, 12),
                color
        );
    }

   
    
     /**
     * Displays a message dialog box with the given message, title, and type.
     *
     * @param message the message to display
     * @param title the title of the dialog box
     * @param messageType the type of message (e.g., information, warning, or
     * error)
     */
    
    private void showDialogBox(String message, String title, int messageType) {
        JOptionPane.showMessageDialog(this, message, title, messageType);
    }
    
    
    

    
    
    /**
     * Switches the application screen to the specified screen name.
     *
     * @param screenName The name of the screen to display.
     */
    private void loadScreen(String screenName) {
        cardLayout.show(getContentPane(), screenName);
    }
    
    /**
     * Handles the login button action. Validates the username and password
     * input and navigates to the main screen if credentials are correct.
     * Displays appropriate error messages otherwise.
     *
     * @param evt The action event triggered by the login button.
     */
    
    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:
        // get username and password input
        String username = txtfldUsername.getText();
        String password = new String(pwfldPassword.getPassword());
        
        // check if username or password is empty
        if(username.isEmpty() || password.isEmpty()) {
            lblErrorLogin.setText("Please enter username and password");
        }
        // check if username and password is incorrect
        else if (!username.equals("admin") || !password.equals("admin")){
            lblErrorLogin.setText("Invalid Username and Password...!");
            
        }// If all details are correct then proceed to main screen
        else{
            lblErrorLogin.setText(""); // clear error messages from txtfield
            loadScreen("MainScreen");
        }
        
      
    }//GEN-LAST:event_btnLoginActionPerformed

    /**
     * Handles the logout button action. Clears the login fields and switches
     * back to the login screen.
     *
     * @param evt The action event triggered by the logout button.
     */
    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        txtfldUsername.setText("");
        pwfldPassword.setText("");
        loadScreen("LoginScreen"); // load the main screen
        
    }//GEN-LAST:event_btnLogoutActionPerformed

    /**
     * clear all input field form the donor details
     * @param evt 
     */
    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        txtfldDonorId.setText("");
        txtfldFullName.setText("");
        txtfldAge.setText("");
        txtfldContact.setText("");
        txtfldBloodGroup.setText("");
        txtfldAddress.setText("");
        txtfldEmail.setText("");
        txtfldGender.setText("");
        
    }//GEN-LAST:event_btnClearActionPerformed

    /**
     * Clears all input fields in the student form. Resets each field's value to
     * an empty string.
     */
    private void clearDonorForm() {
        txtfldDonorId.setText("");
        txtfldFullName.setText("");
        txtfldAge.setText("");
        txtfldContact.setText("");
        txtfldBloodGroup.setText("");
        txtfldAddress.setText("");
        txtfldEmail.setText("");
        txtfldGender.setText("");
        
    }
    
    
    
    
    
    
    
    // Adding button function
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:

         boolean isValid = true;

    // Validate Donor ID
    isValid &= validateField(
            txtfldDonorId, "Donor ID", lblDonorId, "Must be a 4-digit number.",
            errorColor, yellowColor, ValidationUtil.isValidDonorId(txtfldDonorId.getText())
    );

    // Validate Full Name
    isValid &= validateField(
            txtfldFullName, "Full Name", lblFullName, "Must contain only alphabets.",
            errorColor, yellowColor, ValidationUtil.isValidName(txtfldFullName.getText())
    );

    // Validate Blood Group
    isValid &= validateField(
            txtfldBloodGroup, "Blood Group", lblBloodGroup, "Select A-, A+, O+, B+, AB+, B-, O- or AB-.",
            errorColor, yellowColor, ValidationUtil.isValidBloodGroup(txtfldBloodGroup.getText())
    );

    // Validate Contact
    isValid &= validateField(
            txtfldContact, "Contact", lblContact, "Must start with 98 and have 10 digits.",
            errorColor, yellowColor, ValidationUtil.isValidContact(txtfldContact.getText())
    );

    // Validate Address
    isValid &= validateField(
            txtfldAddress, "Address", lblAddress, "Must be only alphabets.",
            errorColor, yellowColor, ValidationUtil.isValidAddress(txtfldAddress.getText())
    );

    // Validate Email
    isValid &= validateField(
            txtfldEmail, "Email", lblEmail, "Must be a valid email address.",
            errorColor, yellowColor, ValidationUtil.isValidEmail(txtfldEmail.getText())
    );

    // Validate Gender
    isValid &= validateField(
            txtfldGender, "Gender", lblGender, "Select Male, Female, or Others.",
            errorColor, yellowColor, ValidationUtil.isValidGender(txtfldGender.getText())
    );

    // Validate Age
    try {
        short age = Short.parseShort(txtfldAge.getText().trim());
        isValid &= validateField(
                txtfldAge, "Age", lblAge, "Must be between 21 and 40.",
                errorColor, yellowColor, ValidationUtil.isValidAge(age)
        );
    } catch (NumberFormatException e) {
        validateField(txtfldAge, "Age", lblAge, "Must be a valid number.", errorColor, yellowColor, false);
        isValid = false;
    }

    if (isValid) {
        // Create a BloodModel instance
        BloodModel newDonor = new BloodModel(
                Integer.parseInt(txtfldDonorId.getText().trim()),
                txtfldFullName.getText().trim(),
                Short.parseShort(txtfldAge.getText().trim()),
                txtfldContact.getText().trim(),
                txtfldBloodGroup.getText().trim(),
                txtfldAddress.getText().trim(),
                txtfldEmail.getText().trim(),
                txtfldGender.getText().trim()
               
        );

        // Check for duplicate Donor ID
        if (checkDuplicateDonor(newDonor)) {
            txtfldDonorId.setBorder(createTitledBorder(errorColor, "Donor ID"));
            showDialogBox("Donor ID already exists.", "Duplicate Entry", JOptionPane.WARNING_MESSAGE);
        } else {
            // Add the donor if no duplicate is found
            donorList.add(newDonor);
            clearDonorForm();
            loadListToTable(donorList);
            txtfldDonorId.setBorder(createTitledBorder(yellowColor, "Donor ID"));
            showDialogBox("Donor added successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
        }
    }

   
      
       
    }//GEN-LAST:event_btnAddActionPerformed

    
    
   
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        // Update Button Functionality
       boolean isValid = true;

    // Validate fields (same as the Add button)
    isValid &= validateField(
            txtfldDonorId, "Donor ID", lblDonorId, "Must be a 4-digit number.",
            errorColor, yellowColor, ValidationUtil.isValidDonorId(txtfldDonorId.getText())
    );
    isValid &= validateField(
            txtfldFullName, "Full Name", lblFullName, "Must contain only alphabets.",
            errorColor, yellowColor, ValidationUtil.isValidName(txtfldFullName.getText())
    );
    isValid &= validateField(
            txtfldBloodGroup, "Blood Group", lblBloodGroup, "Select A-, A+, O+, B+, AB+, B-, O- or AB-.",
            errorColor, yellowColor, ValidationUtil.isValidBloodGroup(txtfldBloodGroup.getText())
    );
    isValid &= validateField(
            txtfldContact, "Contact", lblContact, "Must start with 98 and have 10 digits.",
            errorColor, yellowColor, ValidationUtil.isValidContact(txtfldContact.getText())
    );
    isValid &= validateField(
            txtfldAddress, "Address", lblAddress, "Must be only alphabets.",
            errorColor, yellowColor, ValidationUtil.isValidAddress(txtfldAddress.getText())
    );
    isValid &= validateField(
            txtfldEmail, "Email", lblEmail, "Must be a valid email address.",
            errorColor, yellowColor, ValidationUtil.isValidEmail(txtfldEmail.getText())
    );
    isValid &= validateField(
            txtfldGender, "Gender", lblGender, "Select Male, Female, or Others.",
            errorColor, yellowColor, ValidationUtil.isValidGender(txtfldGender.getText())
    );

    try {
        short age = Short.parseShort(txtfldAge.getText().trim());
        isValid &= validateField(
                txtfldAge, "Age", lblAge, "Must be between 21 and 40.",
                errorColor, yellowColor, ValidationUtil.isValidAge(age)
        );
    } catch (NumberFormatException e) {
        validateField(txtfldAge, "Age", lblAge, "Must be a valid number.", errorColor, yellowColor, false);
        isValid = false;
    }

    //Get table model
   DefaultTableModel tableModel = (DefaultTableModel) tblDonor.getModel();
   if (tblDonor.getSelectedRowCount() == 1) {

    try {
        int selectedRow = tblDonor.getSelectedRow();

        // Retrieve existing values for fields that are not being updated
        Object donorId = tableModel.getValueAt(selectedRow, 0);
        Object fullname = tableModel.getValueAt(selectedRow, 1);
        Object age = tableModel.getValueAt(selectedRow, 2);
        Object contact = tableModel.getValueAt(selectedRow, 3);
        Object bloodgroup = tableModel.getValueAt(selectedRow, 4);
        Object address = tableModel.getValueAt(selectedRow, 5);
        Object email = tableModel.getValueAt(selectedRow, 6);
        Object gender = tableModel.getValueAt(selectedRow, 7);

        // Update only if the corresponding input field is not empty
        if (!txtfldDonorId.getText().trim().isEmpty()) {
            donorId = Integer.valueOf(txtfldDonorId.getText().trim());
        }
        if (!txtfldFullName.getText().trim().isEmpty()) {
            fullname = txtfldFullName.getText().trim();
        }
        if (!txtfldAge.getText().trim().isEmpty()) {
            age = Short.valueOf(txtfldAge.getText().trim());
        }
        if (!txtfldContact.getText().trim().isEmpty()) {
            contact = txtfldContact.getText().trim();
        }
        if (!txtfldBloodGroup.getText().trim().isEmpty()) {
            bloodgroup = txtfldBloodGroup.getText().trim();
        }
        if (!txtfldAddress.getText().trim().isEmpty()) {
            address = txtfldAddress.getText().trim();
        }
        if (!txtfldEmail.getText().trim().isEmpty()) {
            email = txtfldEmail.getText().trim();
        }
        if (!txtfldGender.getText().trim().isEmpty()) {
            gender = txtfldGender.getText().trim();
        }

        // Update the table with the new values
        tableModel.setValueAt(donorId, selectedRow, 0);
        tableModel.setValueAt(fullname, selectedRow, 1);
        tableModel.setValueAt(age, selectedRow, 2);
        tableModel.setValueAt(contact, selectedRow, 3);
        tableModel.setValueAt(bloodgroup, selectedRow, 4);
        tableModel.setValueAt(address, selectedRow, 5);
        tableModel.setValueAt(email, selectedRow, 6);
        tableModel.setValueAt(gender, selectedRow, 7);
        
        // Updated message display
        JOptionPane.showMessageDialog(this, "Updated Successfully");
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Invalid input! Please enter valid numbers for ID and Age.", "Error", JOptionPane.ERROR_MESSAGE);
    }
} else {
    if (tblDonor.getRowCount() == 0) {
        // If table is empty
        JOptionPane.showMessageDialog(this, "Table is empty");
    } else {
        // If no row or multiple rows are selected
        JOptionPane.showMessageDialog(this, "Please select a single row to update data.");
    }
}

     
    
    
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    
    
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
       // Delete Button Functionality
       DefaultTableModel tableModel = (DefaultTableModel) tblDonor.getModel();
        
        // delete row 
        if (tblDonor.getSelectedRowCount()==1){
            // if single row is selected than delete 
            tableModel.removeRow(tblDonor.getSelectedRow());
            
        }else{
            if(tblDonor.getRowCount()==0){
                // if table is empty(no data) than display message 
                JOptionPane.showMessageDialog(this,"Table is empty.");
                
            }else{
                // If table is not empty butbrow is not selected or multiple row is selected 
                JOptionPane.showMessageDialog(this, "Please select any row for Delete.");
            }
        }
        
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void pwfldPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwfldPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pwfldPasswordActionPerformed

    private void btnSortDonorIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortDonorIdActionPerformed
        // TODO add your handling code here:
        SelectionSort selectionSot = new SelectionSort();
        loadListToTable(selectionSort.sortByDonorId(donorList, false));
  
       
    }//GEN-LAST:event_btnSortDonorIdActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
         //Step 1: sorted data
        
        SelectionSort selectionSort = new SelectionSort();
        List<BloodModel> sortedList = selectionSort.sortByFullName(donorList, true);
        BinarySearch search = new BinarySearch();
        BloodModel searchedData = search.searchByFullName(txtFldSearch.getText().trim(), sortedList, 0, sortedList.size()-1);
        if(searchedData!=null){
            System.out.println(searchedData.getFullName());
        }else{
            System.out.println("Sorry");
        }
        
    
    }//GEN-LAST:event_btnSearchActionPerformed

   
    
   /**
     * Checks whether a student with the same LMU ID already exists in the
     * student list.
     *
     * @param student the StudentModel object to check for duplicates
     * @return true if a duplicate is found, false otherwise
     */
    private boolean checkDuplicateDonor(BloodModel donor) {
        return donorList.stream()
                .anyMatch(existingDonor
                        -> existingDonor.getDonorId() == donor.getDonorId());
    }

    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BloodBank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BloodBank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BloodBank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BloodBank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
      BloodBank bank = new BloodBank();
      
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
         bank.setVisible(true);
            
        });
        bank.startProgress();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSortDonorId;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblAddressDetail;
    private javax.swing.JLabel lblAdminLogo;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblBloodGroup;
    private javax.swing.JLabel lblBloodLogo;
    private javax.swing.JLabel lblCallIcon;
    private javax.swing.JLabel lblCallUs;
    private javax.swing.JLabel lblCallingDetails;
    private javax.swing.JLabel lblContact;
    private javax.swing.JLabel lblContactUs;
    private javax.swing.JLabel lblDonateImg;
    private javax.swing.JLabel lblDonorData;
    private javax.swing.JLabel lblDonorId;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblErrorLogin;
    private javax.swing.JLabel lblFooterTitle;
    private javax.swing.JLabel lblFooterTitle1;
    private javax.swing.JLabel lblForgetPassword;
    private javax.swing.JLabel lblFullName;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblHandImg;
    private javax.swing.JLabel lblHeadingTitle;
    private javax.swing.JLabel lblHeadingTitle1;
    private javax.swing.JLabel lblIconAddress;
    private javax.swing.JLabel lblIconSendMsg;
    private javax.swing.JLabel lblInfoTable;
    private javax.swing.JLabel lblLoading;
    private javax.swing.JLabel lblLocation;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JLabel lblLogoBlood;
    private javax.swing.JLabel lblLogout;
    private javax.swing.JLabel lblMessageDetail;
    private javax.swing.JLabel lblMiddle;
    private javax.swing.JLabel lblPointingIcon;
    private javax.swing.JLabel lblSendMessage;
    private javax.swing.JLabel lblSingnInTitle;
    private javax.swing.JLabel lblSubHeading;
    private javax.swing.JLabel lblSubHeading1;
    private javax.swing.JLabel lblSubHeadingTitleLogin;
    private javax.swing.JLabel lblSubMiddle;
    private javax.swing.JLabel lblThirdHeading;
    private javax.swing.JLabel lblWelcomeBloodBankTitle;
    private javax.swing.JLabel lblheading;
    private javax.swing.JProgressBar pgBarSplashScreen;
    private javax.swing.JPanel pnlContactDetails;
    private javax.swing.JPanel pnlContactUs;
    private javax.swing.JPanel pnlDetails;
    private javax.swing.JPanel pnlDonorData;
    private javax.swing.JPanel pnlDonorList;
    private javax.swing.JPanel pnlHome;
    private javax.swing.JPanel pnlImgDonate;
    private javax.swing.JPanel pnlLoadingScreen;
    private javax.swing.JPanel pnlLogin;
    private javax.swing.JPanel pnlLoginScreen;
    private javax.swing.JPanel pnlMainBar;
    private javax.swing.JPanel pnlMainScreen;
    private javax.swing.JPanel pnlMiddleHome;
    private javax.swing.JPanel pnlRightLogin;
    private javax.swing.JPasswordField pwfldPassword;
    private javax.swing.JScrollPane spTblDonor;
    private javax.swing.JTabbedPane tabPanMain;
    private javax.swing.JTable tblDonor;
    private javax.swing.JTextField txtFldSearch;
    private javax.swing.JTextField txtfldAddress;
    private javax.swing.JTextField txtfldAge;
    private javax.swing.JTextField txtfldBloodGroup;
    private javax.swing.JTextField txtfldContact;
    private javax.swing.JTextField txtfldDonorId;
    private javax.swing.JTextField txtfldEmail;
    private javax.swing.JTextField txtfldFullName;
    private javax.swing.JTextField txtfldGender;
    private javax.swing.JTextField txtfldUsername;
    // End of variables declaration//GEN-END:variables
}
